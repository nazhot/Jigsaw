- corners/edges just have a left and a right

- create 4 arrays of numUniqueConnections arrays
    - innie/outie left/right
    - add edges that match 

- go through the 12 different corner-corner pairings
    - get right side of first corner, for each edge in corresponding array
        - get its right side, for each edge in corresponding array
            - get its right side, for each edge in corresponding array
                - check if right side matches second corner left side
                - store if it does
    - based on which pairings have valid solutions, limit the 6 valid corner positions

- for each valid corner position
    - set edges to valid solution
    - start in top left inner corner, for each center that can satisfy it move left to right, top to bottom, filling in centers that can satisfy


Tested:
- Array vs nested loops for going through possible triples
    - Nested loops was initial thought, going 3 loops through all of the edges
    - Array was creating an array of all triples that shared no index
    - Times for both after 100 generations test (from clock(), raw return no calculation done on number )
    - Array: 12836298
    - Loops: 1423611
